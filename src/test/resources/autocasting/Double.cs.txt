namespace autocasting
{
	internal class Autocasting
	{
		private double _d;

		private Autocasting(double d)
		{
			_d = d;
		}

		public virtual double dbl()
		{
			double? val = 110.00 + _d;
			double? res = minus((double)val, (double)val / 2);
			if (res != null)
			{
				return (double)res + 5;
			}
			return 0;
		}

		private double minus(double arg1, double arg2)
		{
			double? result = arg1 - arg2;
			double test = (double)result + 4;
			if (test < 0)
			{
				return 0;
			}
			autocasting.Autocasting obj = new autocasting.Autocasting((double)result);
			result = obj.dbl();
			return (double)result;
		}
	}
}