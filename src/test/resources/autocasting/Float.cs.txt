namespace autocasting
{
	internal class Autocasting
	{
		private float _f;

		private Autocasting(float f, double d)
		{
			_f = f + (float)d;
		}

		public virtual float floatval()
		{
			float? val = 110.0F + _f;
			float? res = minus((float)val, (float)val / 2);
			if (res != null)
			{
				return (float)res + 5;
			}
			return 0;
		}

		private float minus(float arg1, float arg2)
		{
			float? result = arg1 - arg2;
			float test = (float)result + 4;
			if (test < 0)
			{
				return 0;
			}
			autocasting.Autocasting obj = new autocasting.Autocasting((float)result, (double)
				result);
			result = obj.floatval();
			return (float)result;
		}
	}
}